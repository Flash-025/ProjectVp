<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>